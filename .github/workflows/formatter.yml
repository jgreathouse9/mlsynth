name: Formatting and Docstring Generation

on:
  push:
    branches:
      - main  # Trigger on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the 'main' branch

jobs:
  formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Adjust the version as needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 autopep8 docformatter  # Install required tools

      - name: Auto-format code with Black
        run: |
          black . --line-length 79  # Autoformat your code with Black, max line length 79

      - name: Auto-format code with autopep8
        run: |
          autopep8 --in-place --aggressive --max-line-length 79 **/*.py  # Fix formatting issues with autopep8

      - name: Auto-format docstrings with docformatter
        run: |
          find . -name "*.py" -print -exec docformatter --in-place --wrap-summaries 79 --wrap-descriptions 79 {} \;

      - name: Check code style with Flake8
        run: |
          flake8 . --max-line-length=79 --exit-zero  # Run Flake8, allow non-zero exit without failing the job

      - name: Commit and push changes (if any)
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git diff --exit-code || (git commit -m "Auto-format code with Black, autopep8, and docformatter" && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate-docstrings:
    runs-on: ubuntu-latest
    needs: formatting  # Ensures this job runs after the formatting job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pydocstringformatter

      - name: Generate docstrings with numpydoc style
        run: |
          find . -name "*.py" ! -path "./docs/auto_examples/*" -exec pydocstringformatter -w --style numpydoc --numpydoc-section-order --numpydoc-name-type-spacing --numpydoc-section-spacing --numpydoc-section-hyphen-length --no-final-period {} +
        
      - name: Commit and push changes (if any)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Generate docstrings using pydocstringformatter (numpydoc style)"
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
